{"version":3,"file":"main.js","mappings":"qCAAA,MAAMA,EAAY,CAChBC,cAAe,GACfC,aAAc,IACdC,aAAc,GACdC,cAAe,GACfC,YAAa,8BACbC,WAAY,6BACZC,YAAa,8BACbC,YAAa,8BACbC,WAAY,EACZC,aAAc,EACdC,SAAU,GACVC,SAAU,GACVC,aAAc,IACdC,aAAc,IACdC,WAAY,oCAGRC,EAAQC,SAASC,eAAe,YAChCC,EAAY,IAAIC,MAAMpB,EAAUe,YACtCI,EAAUE,OAAS,GAEJ,MAAMC,EACnBC,WAAAA,CAAYC,EAAYC,GACtBC,KAAKF,WAAaA,EAClBE,KAAKC,OAAS3B,EAAUC,cACxByB,KAAKE,WAAa,CAChBC,KAAM7B,EAAUK,YAChByB,IAAK9B,EAAUM,WACfyB,OAAQ/B,EAAUgC,cAClBC,KAAMjC,EAAUO,YAChB2B,KAAMlC,EAAUQ,aAElBkB,KAAKS,UAAY,IAAIC,MACrBV,KAAKS,UAAUE,IAAMrC,EAAUK,YAC/BqB,KAAKD,IAAMA,EACXC,KAAKY,WAAa,CACpB,CAEAT,IAAAA,GACEH,KAAKS,UAAUE,IAAMX,KAAKE,WAAWC,KACrCH,KAAKa,SAAU,CACjB,CAEAT,GAAAA,GACEJ,KAAKS,UAAUE,IAAMX,KAAKE,WAAWE,IACrCJ,KAAKa,SAAU,CACjB,CAEAN,IAAAA,GACEjC,EAAUS,WAAa,EAClBO,EAAMwB,OACTrB,EAAUsB,OAEZf,KAAKS,UAAUE,IAAMX,KAAKE,WAAWK,KACrCP,KAAKC,QAAU,GACfD,KAAKgB,OAAQ,CACf,CAEAR,IAAAA,GACElC,EAAUS,WAAa,EACvBiB,KAAKS,UAAUE,IAAMX,KAAKE,WAAWM,IACvC,CAEAS,IAAAA,CAAKC,EAAKC,GACJnB,KAAKoB,eAAiBpB,KAAKqB,UAAY,IAChCrB,KAAKgB,OAAShB,KAAKqB,UAAY,GACxCrB,KAAKgB,OAAQ,EACZhB,KAAKa,QAAwBb,KAAKI,MAAnBJ,KAAKG,QAEjBH,KAAKY,WAAaZ,KAAKD,KACzBC,KAAKqB,SAAWC,KAAKC,MAAMjD,EAAUS,WAAWT,EAAUE,cAAgB,EAC1EF,EAAUU,aAAeV,EAAUW,SAAWe,KAAKqB,SACnD/C,EAAUS,aACViB,KAAKY,WAAa,GAElBZ,KAAKY,YAAcO,GAGvBD,EAAIM,UAAUxB,KAAKS,UACjBnC,EAAUU,aAAc,EACxBV,EAAUW,SAAUX,EAAUY,SAC9BZ,EAAUa,aAAcb,EAAUc,aAClCd,EAAUG,aAAcH,EAAUI,cACtC,CAEA0C,WAAAA,GACE,OAAIpB,KAAKC,QAAU,CAErB,CAEAwB,MAAAA,GACE,MAAO,CACLC,KAAMpD,EAAUa,aAChBwC,MAAOrD,EAAUa,aAAeb,EAAUG,aAC1CmD,IAAKtD,EAAUc,aACfyC,OAAQvD,EAAUc,aAAed,EAAUI,cAE/C,CAEAoD,YAAAA,CAAaC,EAAQC,GACnB,OAAID,EAAOJ,MAAQK,EAAMN,IAI3B,ECzGK,MAAMO,EAAQ,CACjB,mBACA,oBACA,oBACA,eACA,aACA,gBACA,kBACA,YACA,aACA,oBACA,gBACA,gBACA,MACA,eACA,gBACA,iBACA,qBACA,wBACA,kBACA,oBACA,oBACA,MACA,aACA,aACA,eACA,mBACA,sBACA,wBACA,UACA,iBACA,aACA,kBACA,mBACA,kBACA,gBACA,oBACA,kBACA,cACA,cACA,iBACA,aACA,aACA,qBACA,iBACA,UACA,cACA,YACA,OACA,UACA,WACA,YACA,aACA,kBACA,SACA,oBACA,qBACA,QACA,gBACA,sBACA,eACA,YACA,YACA,kBACA,aACA,YACA,kBACA,kBACA,SACA,qBACA,aACA,uBACA,kBACA,eACA,eACA,UACA,YACA,gBACA,mBACA,QACA,oBACA,qBACA,eACA,kBACA,cACA,oBACA,cACA,cACA,OCtFE3D,EAAY,CAChB4D,YAAa,IACbC,cAAe,GACfC,YAAa,GACbC,aAAc,GACdtD,WAAY,EACZC,aAAc,EACdC,SAAU,GACVC,SAAU,GACVC,aAAc,KACdC,aAAc,KAED,MAAMkD,EACnBzC,WAAAA,CAAYC,EAAYyC,EAAOC,EAAKC,EAAYC,EAAc3C,GAC5DC,KAAKF,WAAaA,EAClBE,KAAKuC,MAAQjB,KAAKC,MAAMgB,EAAQjE,EAAU4D,YAAc5D,EAAU4D,aAClElC,KAAK2C,MAAQrB,KAA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","sources":["webpack://javascript-project/./src/scripts/player.js","webpack://javascript-project/./src/scripts/words.js","webpack://javascript-project/./src/scripts/enemy.js","webpack://javascript-project/./src/scripts/background.js","webpack://javascript-project/./src/scripts/game.js","webpack://javascript-project/./src/index.js"],"sourcesContent":["const CONSTANTS = {\n  PLAYER_HEALTH: 50,\n  PLAYER_SPEED: 5.5, //higher num === slower; stagger frame speed\n  PLAYER_WIDTH: 64, //size of player on canvas\n  PLAYER_HEIGHT: 64, //size of player on canvas\n  SPRITE_WALK: 'assets/game/player/walk.png',\n  SPRITE_RUN: 'assets/game/player/run.png',\n  SPRITE_HURT: 'assets/game/player/hurt.png',\n  SPRITE_DEAD: 'assets/game/player/dead.png',\n  GAME_FRAME: 0, //initial game frame\n  SPRITE_FRAME: 0, //starting frame\n  SPRITE_X: 32, //sprite frame size\n  SPRITE_Y: 32, //sprite frame size\n  SPRITE_POS_X: 100, //starting position\n  SPRITE_POS_Y: 440, //starting position\n  SOUND_HURT: 'assets/music/effects/destroy.wav'\n}\n\nconst audio = document.getElementById(\"bg-music\");\nconst hurtAudio = new Audio(CONSTANTS.SOUND_HURT);\nhurtAudio.volume = 0.1;\n\nexport default class Player {\n  constructor(dimensions, fps) {\n    this.dimensions = dimensions;\n    this.health = CONSTANTS.PLAYER_HEALTH;\n    this.spriteAnim = {\n      walk: CONSTANTS.SPRITE_WALK,\n      run: CONSTANTS.SPRITE_RUN,\n      attack: CONSTANTS.SPRITE_ATTACK,\n      hurt: CONSTANTS.SPRITE_HURT,\n      dead: CONSTANTS.SPRITE_DEAD\n    }\n    this.playerImg = new Image();\n    this.playerImg.src = CONSTANTS.SPRITE_WALK;\n    this.fps = fps;\n    this.frameTimer = 0;\n  }\n\n  walk() {\n    this.playerImg.src = this.spriteAnim.walk;\n    this.running = false;\n  }\n\n  run() {\n    this.playerImg.src = this.spriteAnim.run;\n    this.running = true;\n  }\n\n  hurt() {\n    CONSTANTS.GAME_FRAME = 1;\n    if (!audio.muted) {\n      hurtAudio.play()\n    }\n    this.playerImg.src = this.spriteAnim.hurt;\n    this.health -= 10;\n    this.hurts = true;\n  }\n\n  dead() {\n    CONSTANTS.GAME_FRAME = 0;\n    this.playerImg.src = this.spriteAnim.dead;\n  }\n\n  draw(ctx, deltaTime) {\n    if (this.outOfHealth() && this.position >= 4){\n    } else if (this.hurts && this.position >= 4) {\n      this.hurts = false;\n      !this.running ? this.walk() : this.run()\n    } else {\n      if (this.frameTimer > this.fps) {\n        this.position = Math.floor(CONSTANTS.GAME_FRAME/CONSTANTS.PLAYER_SPEED) % 5;\n        CONSTANTS.SPRITE_FRAME = CONSTANTS.SPRITE_X * this.position;\n        CONSTANTS.GAME_FRAME++;\n        this.frameTimer = 0;\n      } else {\n        this.frameTimer += deltaTime;\n      }\n    }\n    ctx.drawImage(this.playerImg, //image file\n      CONSTANTS.SPRITE_FRAME, 0, //position on sprite frame file\n      CONSTANTS.SPRITE_X, CONSTANTS.SPRITE_Y, //size of position on sprite frame file\n      CONSTANTS.SPRITE_POS_X, CONSTANTS.SPRITE_POS_Y, //position on canvas\n      CONSTANTS.PLAYER_WIDTH, CONSTANTS.PLAYER_HEIGHT) //size of sprite on canvas\n  }\n\n  outOfHealth() {\n    if (this.health <= 0) return true;\n    return false;\n  }\n\n  bounds() {\n    return {\n      left: CONSTANTS.SPRITE_POS_X,\n      right: CONSTANTS.SPRITE_POS_X + CONSTANTS.PLAYER_WIDTH,\n      top: CONSTANTS.SPRITE_POS_Y,\n      bottom: CONSTANTS.SPRITE_POS_Y + CONSTANTS.PLAYER_HEIGHT\n    }\n  }\n\n  collidesWith(player, enemy) {\n    if (player.right > enemy.left) {\n      return true;\n    }\n    return false;\n  }\n}","export const WORDS = [\n    \"Mike is the best\",\n    \"Abbey is the best\",\n    \"Paulo is the best\",\n    \"I like sushi\",\n    \"destroy me\",\n    \"don't kill me\",\n    \"let me live T_T\",\n    \"yum lunch\",\n    \"let it rip\",\n    \"slime slime slime\",\n    \"what is love?\",\n    \"don't hurt me\",\n    \"Ew!\",\n    \"do or do not\",\n    \"roses are red\",\n    \"coding is cool\",\n    \"find the One Piece\",\n    \"drill pierce heavens!\",\n    \"ask salmon else\",\n    \"slime slime slime\",\n    \"krusty krab pizza\",\n    \"UwU\",\n    \"plus ultra\",\n    \"me hokage!\",\n    \"yer a wizard\",\n    \"slimes not limes\",\n    \"dedicate your heart\",\n    \"time stops for no one\",\n    \"yum yum\",\n    \"rise and slime\",\n    \"slime this\",\n    \"is purple blue?\",\n    \"are you a bully?\",\n    \"hike and brunch\",\n    \"don't mock me\",\n    \"slimes be sliming\",\n    \"it be like that\",\n    \"drink water\",\n    \"hello world\",\n    \"i am goo-tiful\",\n    \"stay gooey\",\n    \"you goo-fy\",\n    \"slime feelin' good\",\n    \"blue over pink\",\n    \"SQUISHY\",\n    \"squish this\",\n    \"WOW BUNNY\",\n    \"8==D\",\n    \"1, 2, 3\",\n    \"whatever\",\n    \"Who am I?\",\n    \"what am I?\",\n    \"I'm just filler\",\n    \"WOOHOO\",\n    \"snails have slime\",\n    \"I wanna digivolve.\",\n    \"smile\",\n    \"the very best\",\n    \"baby, don't hurt me\",\n    \"shake it off\",\n    \"keep calm\",\n    \"champagne\",\n    \"vanilla extract\",\n    \"Rose Water\",\n    \"2 + 2 = 5\",\n    \"brave new world\",\n    \"splendid slimes\",\n    \"gobble\",\n    \"come along with me\",\n    \"Come here.\",\n    \"crying in slime mart\",\n    \"wash your hands\",\n    \"boba is life\",\n    \"ball is life\",\n    \"octopus\",\n    \"puff puff\",\n    \"my back hurts\",\n    \"booty everywhere\",\n    \"bewbs\",\n    \"reincarnated as a\",\n    \"what in the isekai\",\n    \"a bus hit me\",\n    \"hark the herald\",\n    \"slimageddon\",\n    \"my slime academia\",\n    \"slimer moon\",\n    \"Slimeball Z\",\n    \"O_O\"\n]\n\n","import { WORDS } from \"./words\";\n\nconst CONSTANTS = {\n  ENEMY_SPEED: 2.5,\n  STAGGER_FRAME: 10,\n  ENEMY_WIDTH: 64,\n  ENEMY_HEIGHT: 64,\n  GAME_FRAME: 0,\n  SPRITE_FRAME: 0,\n  SPRITE_X: 32,\n  SPRITE_Y: 25,\n  SPRITE_POS_X: 1152,\n  SPRITE_POS_Y: 445\n}\nexport default class Enemy {\n  constructor(dimensions, speed, pos, enemyWords, enemyWordPos, fps) {\n    this.dimensions = dimensions;\n    this.speed = Math.floor(speed * CONSTANTS.ENEMY_SPEED + CONSTANTS.ENEMY_SPEED);\n    this.pos_x = Math.floor(CONSTANTS.SPRITE_POS_X + (10 * pos));\n    this.pos_y = 0;\n    this.stagger_frame = CONSTANTS.STAGGER_FRAME - this.speed;\n    this.enemyImg = new Image();\n    this.enemyImg.src = 'assets/game/enemy/slime.png';\n    this.words = WORDS[Math.floor(Math.random() * WORDS.length)];\n    this.words_y = CONSTANTS.SPRITE_POS_Y - Math.random() * 150;\n    this.score = this.words.length;\n    this.destroyed = false;\n    this.checkWord(enemyWords)\n    this.checkWordPosition(enemyWordPos)\n    this.fps = fps;\n    this.maxFrame = 60;\n    this.frameTimer = 0;\n  }\n  checkWordPosition(enemyWordPos) {\n    if (enemyWordPos !== undefined) {\n      while (enemyWordPos.includes(this.words_y)) {\n        this.words_y += 10;\n      }\n    }\n  }\n\n  checkWord (enemyWords) {\n    if (enemyWords !== undefined) {\n      while (enemyWords.includes(this.words)) {\n        this.words = WORDS[Math.floor(Math.random() * WORDS.length)];\n      }\n    }\n  }\n\n  draw(ctx, deltaTime) {\n    if (!this.destroyed) {\n      ctx.beginPath();\n      ctx.fillStyle = \"white\";\n      ctx.roundRect(this.pos_x - this.words.length - 9, this.words_y - 28, (this.words.length * 10) + 10, 22, [10]);\n      ctx.fill();\n      ctx.strokeStyle = \"gray\";\n      ctx.stroke();\n\n      ctx.fillStyle = \"black\";\n      ctx.font = \"24px VT323\";\n      ctx.fillText(this.words, this.pos_x - this.words.length, this.words_y - 10)\n    }\n\n    this.move(ctx, deltaTime)\n  }\n\n  move(ctx, deltaTime) {\n    if (this.destroyed && this.position >= 6) {\n    } else {\n      this.position = Math.floor(CONSTANTS.GAME_FRAME/this.stagger_frame) % 7;\n      CONSTANTS.SPRITE_FRAME = CONSTANTS.SPRITE_X * this.position;\n      ctx.drawImage(this.enemyImg, CONSTANTS.SPRITE_FRAME, this.pos_y,\n        CONSTANTS.SPRITE_X, CONSTANTS.SPRITE_Y,\n        this.pos_x, CONSTANTS.SPRITE_POS_Y,\n        CONSTANTS.ENEMY_WIDTH, CONSTANTS.ENEMY_HEIGHT\n      )\n    }\n    if (this.frameTimer < this.fps) {\n      CONSTANTS.GAME_FRAME++;\n      this.pos_x -= this.speed/2\n      this.frameTimer = 0;\n    } else {\n      this.frameTimer += deltaTime;\n    }\n\n  }\n\n  destroy() {\n    this.pos_y = CONSTANTS.SPRITE_Y * 2;\n    CONSTANTS.GAME_FRAME = 1;\n    this.destroyed = true;\n  }\n\n  bounds() {\n    return {\n      left: this.pos_x,\n      right: this.pos_x + CONSTANTS.ENEMY_WIDTH,\n      top: CONSTANTS.SPRITE_POS_Y,\n      bottom: CONSTANTS.SPRITE_POS_Y + CONSTANTS.ENEMY_HEIGHT\n    }\n  }\n}","const CONSTANTS = {\n  GAME_SPEED: 0.7,\n  GAME_FRAME: 0,\n  SPEED_MODS: [0, 0.5, 0.7, 0.9],\n  WIDTH: 1152,\n  HEIGHT: 576,\n}\nexport default class Background {\n  constructor(ctx, fps) {\n    // this.createImage = this.createImage.bind(this)\n    this.ctx = ctx;\n    this.bg = ['assets/game/background/nature_2/1.png',\n          'assets/game/background/nature_2/2.png',\n          'assets/game/background/nature_5/3.png',\n          'assets/game/background/nature_5/4.png'];\n    this.layers = [];\n    this.fps = fps;\n\n    let i = 0\n    this.bg.forEach(img => {\n      const image = new Image();\n      image.src = img;\n      this.layers.push(new Layer(image, this.ctx, CONSTANTS.SPEED_MODS[i], CONSTANTS.GAME_SPEED, this.fps));\n      i++;\n    })\n  }\n\n  changeSpeed(speed) {\n    this.layers.forEach((layer) => {\n      layer.changeSpeed(speed);\n    })\n  }\n\n  draw(ctx, deltaTime) {\n    this.layers.forEach((layer) => {\n      layer.update(deltaTime);\n      layer.draw();\n    })\n  }\n}\nclass Layer {\n  constructor(img, ctx, speedMod, speed, fps) {\n    this.x = 0;\n    this.y = 0;\n    this.ctx = ctx;\n    this.width = CONSTANTS.WIDTH;\n    this.height = CONSTANTS.HEIGHT;\n    this.img = img;\n    this.speedMod = speedMod;\n    this.speed = speed * this.speedMod\n    this.draw = this.draw.bind(this)\n    this.frameTimer = 0;\n    this.fps = fps;\n  }\n\n  update(deltaTime) {\n    // this.speed = CONSTANTS.GAME_SPEED * this.speedMod\n    if (this.frameTimer > this.fps) {\n      this.x = CONSTANTS.GAME_FRAME * this.speed % (this.width);\n      this.frameTimer = 0;\n      CONSTANTS.GAME_FRAME--\n    } else {\n      this.frameTimer += deltaTime;\n    }\n  }\n\n  changeSpeed(speed) {\n    this.speed = speed;\n  }\n\n  draw() {\n    this.ctx.drawImage(this.img, this.x, this.y, this.width, this.height)\n    this.ctx.drawImage(this.img, this.x + this.width, this.y, this.width, this.height)\n  }\n}","import Player from \"./player\";\nimport Enemy from \"./enemy\";\nimport Background from \"./background\";\n\nconst title = document.getElementById(\"title\");\nconst start = document.getElementById(\"start\");\nconst audio = document.getElementById(\"bg-music\");\nconst hearts = new Image();\nhearts.src = 'assets/game/UI/hearts.png'\n\nconst MUSIC = {\n  introBGMusic: './assets/music/bg/memory.mp3',\n  medBGMusic: 'assets/music/bg/TemplePath.mp3',\n  fastBGMusic: './assets/music/bg/mountainoftrials.mp3',\n  gameOverBGMusic: './assets/music/bg/churchofsaints.mp3',\n  enemyDestroyAudio: new Audio('./assets/music/effects/destroy2.wav'),\n  gameOverAudio: new Audio('./assets/music/effects/game_over.mp3'),\n  mistakeAudio: new Audio('assets/music/effects/mistake.wav')\n};\n\nMUSIC.enemyDestroyAudio.volume = 0.1;\nMUSIC.gameOverAudio.volume = 0.3;\nMUSIC.mistakeAudio.volume = 0.2;\n\nconst HEARTS = {\n  HEART_SIZE: 32,\n  HEART_1_X: 0,\n  HEART_2_X: 0,\n  HEART_3_X: 0,\n  HEART_4_X: 0,\n  HEART_5_X: 0,\n  HEARTS_Y: 0,\n  HEARTS_POS_X: 40,\n  HEARTS_POS_Y: 27,\n  HEART_CANVAS_SIZE: 64\n};\n\nconst FPS = 1000/500;\n\nexport default class TypeBit {\n  constructor(canvas) {\n    this.ctx = canvas.getContext(\"2d\");\n    this.dimensions = {\n      width: canvas.width,\n      height: canvas.height\n    };\n    this.bg = new Background(this.ctx, FPS);\n    this.player = new Player(this.dimensions, FPS)\n    this.enemy = new Enemy(this.dimensions, FPS)\n    this.enemiesData = {\n      enemies: [],\n      enemyWords: [],\n      enemyWordPos: []\n    }\n    this.numEnemies = 1;\n    this.maxEnemies = 3;\n    this.score = 0;\n    this.typed = \"\";\n    this.difficultyChange = false;\n    this.level = {\n      med: false,\n      hard: false\n    }\n  }\n\n  run() {\n    this.running = false;\n    audio.src = MUSIC.introBGMusic;\n    this.animate(0);\n  }\n\n  play() {\n    this.running = true;\n    this.typed = \"\";\n    title.innerHTML = \"\"\n    start.innerHTML = \"\"\n    this.enemyInterval = setInterval(this.addEnemies.bind(this), 800)\n  }\n\n  restart() {\n    this.running = false;\n\n    //Reset Enemies\n    Object.keys(this.enemiesData).forEach(enemyData => this.enemiesData[enemyData] = [])\n    this.maxEnemies = 4;\n    this.numEnemies = 1;\n    clearInterval(this.enemyInterval);\n\n    //Reset Player Data\n    this.typed = \"\";\n    this.score = 0;\n    this.player.health = 50;\n    HEARTS.HEART_1_X = 0;\n    HEARTS.HEART_2_X = 0;\n    HEARTS.HEART_3_X = 0;\n    HEARTS.HEART_4_X = 0;\n    HEARTS.HEART_5_X = 0;\n    this.player.walk();\n\n    //Reset Background and Sound\n    this.bg.changeSpeed(1);\n    audio.src = MUSIC.introBGMusic;\n    Object.keys(this.level).forEach((lvl) => this.level[lvl] = false);\n    title.innerHTML = \"typebit\"\n    start.innerHTML = \"press any key to start\"\n  }\n\n  gameOver() {\n    return this.player.outOfHealth()\n  }\n\n  changeDifficulty() {\n    if (this.score > 50) {\n      this.maxEnemies = 4;\n      this.numEnemies = 2;\n    } else if (this.score >= 50 && this.score <= 125) {\n      this.maxEnemies = 6;\n      this.numEnemies = 4;\n    } if (this.score > 125 && this.score <= 250) {\n      this.maxEnemies = 7;\n      this.numEnemies = 5;\n      if (!this.level.med) {\n        audio.src = MUSIC.medBGMusic\n        this.level.med = true;\n      }\n    } else if (this.score > 250  && this.score <= 350) {\n      this.maxEnemies = 8;\n      this.numEnemies = 5;\n      this.bg.changeSpeed(1.5);\n      this.player.run();\n      if (!this.level.hard) {\n        audio.src = MUSIC.fastBGMusic;\n        this.level.hard = true;\n      }\n    } else if (this.score > 300 && this.score <= 400) {\n      this.maxEnemies = 8;\n      this.numEnemies = 6;\n    } else if (this.score > 400) {\n      this.bg.changeSpeed(2);\n      this.maxEnemies = 10;\n      this.numEnemies = 6;\n    }\n  }\n\n  removeEnemy(enemy) {\n    const enemyIndex = this.enemiesData.enemies.indexOf(enemy)\n    this.enemiesData.enemies.splice(enemyIndex, 1);\n    this.enemiesData.enemyWords.splice(enemyIndex, 1);\n    this.enemiesData.enemyWordPos.splice(enemyIndex, 1);\n  }\n\n  animate(timeStamp, lastTime = 0) {\n    const deltaTime = (timeStamp - lastTime)/1600;\n    lastTime = timeStamp;\n    /*Animate background and player*/\n    this.ctx.clearRect.bind(this, 0, 0, this.dimensions.width, this.dimensions.height);\n    this.bg.draw(this.ctx, deltaTime);\n    this.player.draw(this.ctx, deltaTime);\n\n    /* Game Over Sequence */\n    if (this.gameOver() && this.running){\n      audio.src = MUSIC.gameOverBGMusic;\n      if (!audio.muted) {\n        MUSIC.gameOverAudio.play();\n      }\n      this.health(this.ctx)\n      this.player.dead();\n      this.bg.changeSpeed(0);\n      title.innerHTML = \"GAME OVER\";\n      start.innerHTML = `final score: ${this.score} <br>[ctrl] to restart`;\n      clearInterval(this.enemyInterval);\n      this.running = false;\n    }\n\n    /*Increase difficulty*/\n    this.changeDifficulty();\n\n    /*Animate enemies and status if game started*/\n    if (this.running) {\n      //Health\n      this.health(this.ctx)\n\n      /*Input Logic*/\n      this.wordSubmit();\n\n      /*Enemy Logic*/\n      this.enemiesData.enemies.forEach(enemy => {\n        enemy.draw(this.ctx, deltaTime)\n\n        //Remove enemy if out of bounds\n        if (enemy.bounds().right < 0) {\n          this.removeEnemy(enemy)\n        }\n\n        //Enemy collision with player when not already destroyed\n        if (this.player.collidesWith(this.player.bounds(), enemy.bounds())\n        && enemy.destroyed === false) {\n          this.player.hurt();\n          this.removeEnemy(enemy)\n        }\n      })\n\n        //Game data info\n        this.status(this.ctx);\n    }\n\n    this.animReq = requestAnimationFrame(this.animate.bind(this))\n  }\n\n  status(ctx) {\n    ctx.font = \"40px VT323\";\n    ctx.fillText(`score: ${this.score}`, 960, 70)\n    ctx.font = \"64px VT323\";\n    ctx.fillText(this.typed, 200, 280)\n  }\n\n  addEnemies() {\n    for (let i = 0; i < this.numEnemies; i++){\n      if (this.enemiesData.enemies.length < this.maxEnemies) {\n        let speed = Math.random()\n        let pos = Math.random()\n        const newEnemy = new Enemy(this.dimensions, speed, pos,\n          this.enemiesData.enemyWords, this.enemiesData.enemyWordPos, FPS)\n        this.enemiesData.enemies.push(newEnemy);\n        this.enemiesData.enemyWords.push(newEnemy.words)\n        this.enemiesData.enemyWordPos.push(newEnemy.words_y)\n      }\n    }\n  }\n\n  wordSubmit() {\n    if (this.typed.slice(-1) === \"~\") {\n      this.typedWord = this.typed.slice(0, -1);\n\n      if (this.enemiesData.enemyWords.includes(this.typedWord)) {\n        if (!audio.muted) {\n          MUSIC.enemyDestroyAudio.play();\n        };\n\n        let enemyIdx = this.enemiesData.enemyWords.indexOf(this.typedWord)\n        let enemy = this.enemiesData.enemies[enemyIdx]\n        enemy.destroy();\n        this.score += enemy.score;\n      } else {\n        if (!audio.muted) {\n          MUSIC.mistakeAudio.play();\n        }\n      }\n      this.typed = \"\";\n    }\n  }\n\n  health(ctx) {\n    if (this.player.health < 10) HEARTS.HEART_1_X = 64\n    ctx.drawImage(hearts,\n      HEARTS.HEART_1_X, HEARTS.HEARTS_Y,\n      HEARTS.HEART_SIZE, HEARTS.HEART_SIZE,\n      HEARTS.HEARTS_POS_X, HEARTS.HEARTS_POS_Y,\n      HEARTS.HEART_CANVAS_SIZE, HEARTS.HEART_CANVAS_SIZE)\n\n    if (this.player.health < 20) HEARTS.HEART_2_X = 64\n    ctx.drawImage(hearts,\n      HEARTS.HEART_2_X, HEARTS.HEARTS_Y,\n      HEARTS.HEART_SIZE, HEARTS.HEART_SIZE,\n      HEARTS.HEARTS_POS_X + HEARTS.HEART_CANVAS_SIZE, HEARTS.HEARTS_POS_Y,\n      HEARTS.HEART_CANVAS_SIZE, HEARTS.HEART_CANVAS_SIZE)\n\n    if (this.player.health < 30) HEARTS.HEART_3_X = 64\n    ctx.drawImage(hearts,\n      HEARTS.HEART_3_X, HEARTS.HEARTS_Y,\n      HEARTS.HEART_SIZE, HEARTS.HEART_SIZE,\n      HEARTS.HEARTS_POS_X + (HEARTS.HEART_CANVAS_SIZE * 2), HEARTS.HEARTS_POS_Y,\n      HEARTS.HEART_CANVAS_SIZE, HEARTS.HEART_CANVAS_SIZE)\n\n    if (this.player.health < 40) HEARTS.HEART_4_X = 64\n    ctx.drawImage(hearts,\n      HEARTS.HEART_4_X, HEARTS.HEARTS_Y,\n      HEARTS.HEART_SIZE, HEARTS.HEART_SIZE,\n      HEARTS.HEARTS_POS_X + (HEARTS.HEART_CANVAS_SIZE * 3), HEARTS.HEARTS_POS_Y,\n      HEARTS.HEART_CANVAS_SIZE, HEARTS.HEART_CANVAS_SIZE)\n\n    if (this.player.health < 50) HEARTS.HEART_5_X = 64\n    ctx.drawImage(hearts,\n      HEARTS.HEART_5_X, HEARTS.HEARTS_Y,\n      HEARTS.HEART_SIZE, HEARTS.HEART_SIZE,\n      HEARTS.HEARTS_POS_X + (HEARTS.HEART_CANVAS_SIZE * 4), HEARTS.HEARTS_POS_Y,\n      HEARTS.HEART_CANVAS_SIZE, HEARTS.HEART_CANVAS_SIZE)\n  }\n}","import TypeBit from \"./scripts/game\";\n\nconst canvas = document.getElementById('canvas');\nconst mobileError = document.getElementById('mobile-error');\nconst gameContainer = document.getElementById(\"game-container\");\nconst retry = document.getElementById(\"retry\");\nconst mute = document.getElementById(\"bg-mute\");\nconst audio = document.getElementById(\"bg-music\");\nconst invalidKeys = [\"Tab\",\"CapsLock\", \"Alt\", \"AltGraph\", \"Fn\", \"Super\",\n\"Symbol\", \"NumLock\", \"Meta\", \"Hyper\", \"Shift\", \"ArrowRight\", \"ArrowLeft\",\n\"ArrowUp\", \"ArrowDown\", \"Delete\", \"Insert\", \"PageUp\", \"PageDown\"]\nlet gameStarted = false;\n\n//Event to mute Audio\nconst muteAudio = (e) => {\n  e.preventDefault();\n\n  if (!audio.muted) {\n    audio.muted = true;\n    mute.src = \"./assets/icons/mute.png\";\n  } else {\n    audio.muted = false;\n    mute.src = \"./assets/icons/speaker.png\";\n  }\n}\n\n/*Check if user is using mobile device*/\nwindow.mobileCheck = function() {\n  let hasTouchScreen = false;\n\n  //Recommended way to check for mobile device per MDN docs\n  if (\"maxTouchPoints\" in navigator) {\n    hasTouchScreen = navigator.maxTouchPoints > 0;\n  } else if (\"msMaxTouchPoints\" in navigator) {\n    hasTouchScreen = navigator.msMaxTouchPoints > 0;\n  } else {\n    const mQ = matchMedia?.(\"(pointer:coarse)\");\n    if (mQ?.media === \"(pointer:coarse)\") {\n      hasTouchScreen = !!mQ.matches;\n    } else if (\"orientation\" in window) {\n      hasTouchScreen = true; // deprecated, but good fallback\n    } else {\n      // Only as a last resort, fall back to user agent sniffing\n      const UA = navigator.userAgent;\n      hasTouchScreen =\n        /\\b(BlackBerry|webOS|iPhone|IEMobile)\\b/i.test(UA) ||\n        /\\b(Android|Windows Phone|iPad|iPod)\\b/i.test(UA);\n      }\n    }\n  return hasTouchScreen;\n};\n\n/*Only show game if not on mobile device*/\nif (window.mobileCheck()) {\n  gameContainer.remove();\n  mobileError.textContent = \"sorry, typebit is not compatible with mobile devices 🥺 \\r\\n\\r\\n if you get this error on desktop, try disconnecting touch devices and restart\"\n\n  //Add social media icons to mobile view\n  const gitHubIcon = new Image();\n  const linkedInIcon = new Image();\n  gitHubIcon.src = '../assets/nav/github.png';\n  linkedInIcon.src = '../assets/nav/linkedIn.png';\n  gitHubIcon.onclick = function() {\n    window.location.href = 'https://github.com/cubeydice/typebit';\n  };\n  linkedInIcon.onclick = function() {\n    window.location.href = 'hhttps://www.linkedin.com/in/queen-belle-d-118b7859/';\n  };\n  const iconDiv = document.createElement('div');\n  mobileError.appendChild(iconDiv).appendChild(linkedInIcon);\n  mobileError.appendChild(iconDiv).appendChild(gitHubIcon);\n} else {\n  // Play Game\n  const game = new TypeBit(canvas);\n  game.run();\n\n  window.addEventListener('keydown', function (e) {\n    //logic for key press input\n    if (gameStarted) {\n      if (invalidKeys.includes(e.key)) {\n      } else if (e.key === \"Backspace\") {\n        game.typed = game.typed.slice(0,-1);\n      } else if (e.key === \"Escape\") {\n        game.typed = \"\";\n      } else if (e.key === \"Enter\") {\n        game.typed += \"~\";\n      } else if (e.key === \"Control\") {\n        game.restart();\n      } else {\n        game.typed += e.key;\n      }\n    } else {\n      game.play();\n      gameStarted = true;\n    }\n  }, false);\n\n  //Restart Game\n  const restart = (e) => {\n    e.preventDefault();\n    gameStarted = false;\n    game.restart();\n  }\n  retry.addEventListener(\"click\", restart)\n\n  // Music\n\n  mute.addEventListener(\"click\", muteAudio)\n\n}\n\n"],"names":["CONSTANTS","PLAYER_HEALTH","PLAYER_SPEED","PLAYER_WIDTH","PLAYER_HEIGHT","SPRITE_WALK","SPRITE_RUN","SPRITE_HURT","SPRITE_DEAD","GAME_FRAME","SPRITE_FRAME","SPRITE_X","SPRITE_Y","SPRITE_POS_X","SPRITE_POS_Y","SOUND_HURT","audio","document","getElementById","hurtAudio","Audio","volume","Player","constructor","dimensions","fps","this","health","spriteAnim","walk","run","attack","SPRITE_ATTACK","hurt","dead","playerImg","Image","src","frameTimer","running","muted","play","hurts","draw","ctx","deltaTime","outOfHealth","position","Math","floor","drawImage","bounds","left","right","top","bottom","collidesWith","player","enemy","WORDS","ENEMY_SPEED","STAGGER_FRAME","ENEMY_WIDTH","ENEMY_HEIGHT","Enemy","speed","pos","enemyWords","enemyWordPos","pos_x","pos_y","stagger_frame","enemyImg","words","random","length","words_y","score","destroyed","checkWord","checkWordPosition","maxFrame","undefined","includes","beginPath","fillStyle","roundRect","fill","strokeStyle","stroke","font","fillText","move","destroy","GAME_SPEED","SPEED_MODS","WIDTH","HEIGHT","Background","bg","layers","i","forEach","img","image","push","Layer","changeSpeed","layer","update","speedMod","x","y","width","height","bind","title","start","hearts","MUSIC","introBGMusic","medBGMusic","fastBGMusic","gameOverBGMusic","enemyDestroyAudio","gameOverAudio","mistakeAudio","HEARTS","HEART_SIZE","HEART_1_X","HEART_2_X","HEART_3_X","HEART_4_X","HEART_5_X","HEARTS_Y","HEARTS_POS_X","HEARTS_POS_Y","HEART_CANVAS_SIZE","TypeBit","canvas","getContext","enemiesData","enemies","numEnemies","maxEnemies","typed","difficultyChange","level","med","hard","animate","innerHTML","enemyInterval","setInterval","addEnemies","restart","Object","keys","enemyData","clearInterval","lvl","gameOver","changeDifficulty","removeEnemy","enemyIndex","indexOf","splice","timeStamp","lastTime","arguments","clearRect","wordSubmit","status","animReq","requestAnimationFrame","newEnemy","slice","typedWord","enemyIdx","mobileError","gameContainer","retry","mute","invalidKeys","gameStarted","muteAudio","e","preventDefault","window","mobileCheck","hasTouchScreen","navigator","maxTouchPoints","msMaxTouchPoints","mQ","matchMedia","media","matches","UA","userAgent","test","remove","textContent","gitHubIcon","linkedInIcon","onclick","location","href","iconDiv","createElement","appendChild","game","addEventListener","key"],"sourceRoot":""}